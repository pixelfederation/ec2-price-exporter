# Default values for ec2-price-exporter.
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: ghcr.io/pixelfederation/ec2-price-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.2.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

logLevel: "info"
# Comma separated list of product descriptions, used to filter spot instances. Accepted values: Linux/UNIX, SUSE Linux, Windows, Linux/UNIX (Amazon VPC), SUSE Linux (Amazon VPC), Windows (Amazon VPC)
productDescriptions: "Linux/UNIX"
# Comma separated list of operating systems, used to filter ondemand instances. Accepted values: Linux, RHEL, SUSE, Windows
operatingSystems: "Linux"
# Comma separated list of AWS regions to get pricing for ("" for all regions)
regions: ""
# How long should the results be cached, in seconds
cacheTTL: 0
# Comma separated list of Lifecycles (spot, ondemand) to get pricing for
instanceLifecycle: "spot,ondemand"
# Array of instance regexes
instanceRegexes: {}
  # - "^(c(5|6|7|8))([a-z]+)\\.(large|xlarge|2xlarge|4xlarge)$"
  # - "^(m(4|5|6|7|8))([a-z]+)\\.(large|xlarge|2xlarge|4xlarge)$"
  # - "^(r(5|6|7|8))([a-z]+)\\.(large|xlarge|2xlarge|4xlarge)$"
  # - "^(t(4|5|6|7|8))([a-z]+)\\.(large|xlarge|2xlarge|4xlarge)$"

extraArgs: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceMonitor:
  enabled: false
  metricsPath: "/metrics"
  interval: 60s
  metricRelabelings: []

nodeSelector: {}

tolerations: []

affinity: {}
